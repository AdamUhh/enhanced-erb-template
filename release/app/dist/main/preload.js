!function(e,r){if("object"==typeof exports&&"object"==typeof module)module.exports=r();else if("function"==typeof define&&define.amd)define([],r);else{var t=r();for(var o in t)("object"==typeof exports?exports:e)[o]=t[o]}}(global,(()=>(()=>{"use strict";var e={r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},r={};e.r(r);const t=require("electron");var o;!function(e){e.closeApp="close-app",e.minimizeApp="minimize-app",e.maximizeApp="maximize-app",e.isAppMaximized="is-app-maximized",e.restartApp="restart-app",e.clearStore="clear-store",e.checkForUpdates="check-for-updates",e.toggleDevTools="toggle-dev-tools",e.toggleRendererErrorDialog="toggle-renderer-error-dialog",e.exportStoreData="export-store-data",e.importStoreData="import-store-data",e.loadStoreData="load-store-data",e.setStoreValue="set-store-value",e.getStoreValue="get-store-value",e.toggleExampleVisibility="toggle-example-visibility"}(o||(o={}));const i=Object.values(o),n=i.map((e=>`${e}-reply`)),s=[...i,...n];const a=(e,r="Error")=>{const t=function(e){let r="";return r="string"==typeof e?e:e?.response?.data?JSON.stringify(e.response.data):e?.message||e instanceof Error?e.message:JSON.stringify(e),r}(e);return{success:!1,msg:r,payload:t??""}},l={ipc:{on:(e,r)=>{s.includes(e)&&t.ipcRenderer.on(e,((e,...t)=>r(e,...t)))},removeListener:(e,r)=>{s.includes(e)&&t.ipcRenderer.removeListener(e,((e,...t)=>r(e,...t)))},removeAllListeners:e=>{s.includes(e)&&t.ipcRenderer.removeAllListeners(e)},send:(e,r)=>{s.includes(e)&&t.ipcRenderer.send(e,r)},invoke:(...e)=>new Promise(((r,o)=>{const[i,n]=e;s.includes(i)?t.ipcRenderer.invoke(i,n).then((e=>r(e))).catch((e=>o(a(e,"Error in invoke")))):o(a(i,"Invalid Channel"))}))}};return t.contextBridge.exposeInMainWorld("electron",l),r})()));
//# sourceMappingURL=preload.js.map